DROP SCHEMA INVOICE;
CREATE SCHEMA IF NOT EXISTS INVOICE;

CREATE TABLE IF NOT EXISTS INVOICE.USERS (
  USER_ID     INT          NOT NULL IDENTITY,
  USERNAME    VARCHAR2(50) NOT NULL,
  PASSWORD    VARCHAR2(200),
  FIRST_NAME  VARCHAR2(100),
  LAST_NAME   VARCHAR2(100),
  MIDDLE_NAME VARCHAR2(100),
  LAST_LOGGED TIMESTAMP,
  ENABLED     BOOLEAN      NOT NULL DEFAULT FALSE,
  UNIQUE (USERNAME)
);

CREATE TABLE IF NOT EXISTS INVOICE.ROLES (
  ROLE_ID   INT          NOT NULL PRIMARY KEY,
  ROLE_NAME VARCHAR2(50) NOT NULL,
  UNIQUE (ROLE_NAME)
);

CREATE TABLE IF NOT EXISTS INVOICE.USER_ROLE (
  USER_ROLE_ID  INT       NOT NULL IDENTITY,
  USER_ID       INT       NOT NULL,
  ROLE_ID       INT       NOT NULL,
  DATE_ASSIGNED TIMESTAMP NOT NULL DEFAULT SYSTIMESTAMP,
  FOREIGN KEY (USER_ID) REFERENCES INVOICE.USERS (USER_ID),
  FOREIGN KEY (ROLE_ID) REFERENCES INVOICE.ROLES (ROLE_ID),
  UNIQUE (USER_ID, ROLE_ID)
);

CREATE TABLE IF NOT EXISTS INVOICE.COMPANIES (
  COMPANY_ID      INT           NOT NULL IDENTITY,
  COMPANY_NAME    VARCHAR2(255) NOT NULL,
  BUSINESS_NAME   VARCHAR2(255),
  ADDRESS_LINE1   VARCHAR2(500) NOT NULL,
  ADDRESS_LINE2   VARCHAR2(500),
  PHONE1          VARCHAR2(20),
  OWNED_BY_ME     INT           NOT NULL DEFAULT 1,
  BUSINESS_NUMBER VARCHAR2(30),
  COMPANY_LOGO    BLOB,
  UNIQUE (COMPANY_NAME)
);

CREATE TABLE IF NOT EXISTS INVOICE.RATES (
  RATE_ID       INT  NOT NULL IDENTITY,
  COMPANY_ID    INT  NOT NULL,
  RATE_PER_HOUR DECIMAL,
  RATE_PER_DAY  DECIMAL,
  RATE_FOR_USER INT,
  VALID_FROM    DATE NOT NULL,
  VALID_TO      DATE,
  FOREIGN KEY (RATE_FOR_USER) REFERENCES INVOICE.USERS (USER_ID),
  FOREIGN KEY (COMPANY_ID) REFERENCES INVOICE.COMPANIES (COMPANY_ID)
);

CREATE TABLE IF NOT EXISTS INVOICE.TAX (
  TAX_ID     INT          NOT NULL IDENTITY,
  PERCENT    DECIMAL      NOT NULL,
  IDENTIFIER VARCHAR2(50) NOT NULL,
  UNIQUE (IDENTIFIER)
);

CREATE TABLE IF NOT EXISTS INVOICE.INVOICE (
  INVOICE_ID   INT           NOT NULL IDENTITY,
  COMPANY_FROM INT           NOT NULL,
  COMPANY_TO   INT           NOT NULL,
  RATE         INT           NOT NULL,
  FROM_DATE    DATE          NOT NULL,
  TO_DATE      DATE          NOT NULL,
  CREATED_DATE DATE          NOT NULL DEFAULT SYSTIMESTAMP,
  TITLE        VARCHAR2(255) NOT NULL DEFAULT 'Invoice',
  DUE_DATE     DATE          NOT NULL,
  TAX_ID       INT           NOT NULL,
  TAX_PERCENT  DECIMAL       NOT NULL,
  NOTE         VARCHAR2(2000),
  PAID_DATE    DATE,
  FOREIGN KEY (COMPANY_FROM) REFERENCES INVOICE.COMPANIES (COMPANY_ID),
  FOREIGN KEY (COMPANY_TO) REFERENCES INVOICE.COMPANIES (COMPANY_ID),
  FOREIGN KEY (TAX_ID) REFERENCES INVOICE.TAX (TAX_ID),
  FOREIGN KEY (RATE) REFERENCES INVOICE.RATES (RATE_ID)
);

CREATE TABLE IF NOT EXISTS INVOICE.ATTACHMENT (
  ATTACHMENT_ID INT           NOT NULL IDENTITY,
  INVOICE_ID    INT           NOT NULL,
  FILE          BLOB          NOT NULL,
  FILENAME      VARCHAR2(255) NOT NULL,
  FOREIGN KEY (INVOICE_ID) REFERENCES INVOICE.INVOICE (INVOICE_ID),
  UNIQUE (FILENAME)
);

CREATE TABLE IF NOT EXISTS INVOICE.INVOICE_ITEMS (
  INVOICE_ITEM_ID INT           NOT NULL IDENTITY,
  INVOICE_ID      INT           NOT NULL,
  DESCRIPTION     VARCHAR2(255) NOT NULL,
  CODE            VARCHAR2(255),
  HOURS_TOTAL     DECIMAL,
  VALUE           DECIMAL       NOT NULL,
  FOREIGN KEY (INVOICE_ID) REFERENCES INVOICE.INVOICE (INVOICE_ID)
);

CREATE TABLE IF NOT EXISTS INVOICE.TIME_SHEET (
  TIMESHEET_ID    INT     NOT NULL IDENTITY,
  INVOICE_ITEM_ID INT     NOT NULL,
  ITEM_DATE       DATE    NOT NULL,
  HOURS_WORKED    DECIMAL NOT NULL,
  FOREIGN KEY (INVOICE_ITEM_ID) REFERENCES INVOICE.INVOICE_ITEMS (INVOICE_ITEM_ID)
);


INSERT INTO INVOICE.TAX (PERCENT, IDENTIFIER) VALUES (0.13, 'HST');

INSERT INTO INVOICE.ROLES (ROLE_ID, ROLE_NAME) VALUES (1, 'ROLE_ADMIN');
INSERT INTO INVOICE.ROLES (ROLE_ID, ROLE_NAME) VALUES (2, 'ROLE_USER');

INSERT INTO INVOICE.USERS (USER_ID, USERNAME, PASSWORD, FIRST_NAME, LAST_NAME, MIDDLE_NAME, LAST_LOGGED, ENABLED)
VALUES (1, 'bcavlin', '$2a$10$2VfGSFh/GPiQ44TiENuYgO7A7jz7C6Kog6Gg3sB07cQfW884nP52O', 'Branislav', 'Cavlin', '',
        SYSTIMESTAMP, TRUE);

INSERT INTO INVOICE.USER_ROLE (USER_ID, ROLE_ID, DATE_ASSIGNED) VALUES (1, 1, SYSTIMESTAMP);


COMMIT;